@*@model IEnumerable<Mhotivo.Models.DisplayStudentModel>*@
@using System.Web.Mvc.Html
@model PagedList.IPagedList<Mhotivo.Models.DisplayStudentModel>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Html.Partial("~/Views/Shared/_MessageArea.cshtml")

<h2>Estudiantes Registrados  </h2>

<a class="toAdd" data-toggle="modal" role="button" data-id="Student/Add" ><span class="btn btn-small btn-primary active">Agregar Estudiante</span></a>

@if(!Model.Any())
{
    <div class="well well-large">
		<h4 class="blue">Tabla Vacia</h4>
		No hay estudiantes a mostrar.
	</div>
}
else
{
    using (Html.BeginForm("Index", "Student", FormMethod.Get, new { id = "Form", @class = "form-horizontal", @Style = "margin:0;" }))
    {
        <p>
            Buscar por Nombre: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
            <input type="submit" value="Buscar" />
        </p>
    }
    <table class="table table-striped table-bordered table-hover" id="sample-table-1">
	    <thead>
		    <tr>
		        <th>@Html.DisplayNameFor(model => model.First().UrlPicture)</th>
                
                <th>@Html.ActionLink("Nombre Completo", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })</th>

                @*<th>@Html.DisplayNameFor(model => model.First().FullName)</th>*@
		        
                <th>@Html.ActionLink("Fecha de Inicio", "Index", new { sortOrder = ViewBag.DateSortParm }) </th>

                @*<th>@Html.DisplayNameFor(model => model.First().StartDate)</th>*@
                <th>@Html.DisplayNameFor(model => model.First().BloodType)</th>
                <th>@Html.DisplayNameFor(model => model.First().AccountNumber)</th>
			    <th>@Html.DisplayNameFor(model => model.First().Tutor1)</th>
			    <th>@Html.DisplayNameFor(model => model.First().Tutor2)</th>
                <th></th>
		    </tr>
	    </thead>
        <tbody>
        
            @foreach (var item in Model) {
                <tr>
                    <td data-id="Student/Details/@Html.DisplayFor(modelItem => item.Id)" class="toDetails">
                        <div id="Photo">
                            @Html.ValidationSummary(true)
                            @{
                                var imgSrc = "";
                                if (item.Photo != null)
                                {
                                    var base64 = Convert.ToBase64String(item.Photo);
                                    imgSrc = String.Format("data:image/jpeg;base64,{0}", base64);
                                }
                            }
                            <img alt="150x150" height="150" width="150" src="@imgSrc" />
                        </div>
                        <div class="text">
                        </div>
                    </td>

                    <td  >@Html.DisplayFor(modelItem => item.FullName)</td>
			        <td  >@Html.DisplayFor(modelItem => item.StartDate)</td>
                    <td  >@Html.DisplayFor(modelItem => item.BloodType)</td>
                    <td  >@Html.DisplayFor(modelItem => item.AccountNumber)</td>
			        <td  >@Html.DisplayFor(modelItem => item.Tutor1.FullName)</td>
			        <td  >@Html.DisplayFor(modelItem => item.Tutor2.FullName)</td>
                    <td>
                        <a data-id="Student/Details/@Html.DisplayFor(modelItem => item.Id)" class="toDetails">Detalles</a>
                        <a href="~/Student/Edit/@Html.DisplayFor(modelItem => item.Id)"><i class="icon-edit bigger-120"></i></a>
                        @*<a class="toEdit" data-toggle="modal" role="button" data-target="#EditModal" id="/Student/Edit/@Html.DisplayFor(modelItem => item.Id)"><i class="icon-edit bigger-120"></i></a>*@
                        @*<a class="toDelete" role="button" id="@Html.DisplayFor(modelItem => item.Id)_Val"><i class="icon-trash bigger-120"></i></a>*@
                        @using (Html.BeginForm("Delete", "Student", new { id = Html.DisplayFor(modelItem => item.Id) }, FormMethod.Post,
                            new { id = "Form_" + Html.DisplayFor(modelItem => item.Id) + "_Val", style = "display: none" })) { }
                        <input type="hidden" id="@Html.DisplayFor(modelItem => item.Id)_Val_Message"
                               value="¿Realmente desea eliminar al alumno @Html.DisplayFor(modelItem => item.FullName)?" />
                    </td>
                </tr>
            }
        </tbody>
    </table>   
    
    <br />
    <p>
        Pagina @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount
    </p>
        
    //Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)

    @Html.PagedListPager(Model, page => Url.Action("Index",
        new {page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter}));

}

<!-- Modal -->
<div tabindex="-1" class="modal hide fade" id="EditModal" style="display: none;" aria-hidden="true">
    <div id="body" class="modal-body">
        
    </div>
</div>
