@*@model IEnumerable<Mhotivo.Models.DisplayUserModel>*@
           
@using System.Web.Mvc.Html
@model PagedList.IPagedList<Mhotivo.Models.DisplayUserModel>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Html.Partial("~/Views/Shared/_MessageArea.cshtml")

<h2>Usuarios Registrados  </h2>

<a class="toEdit" data-toggle="modal" role="button" data-target="#EditModal" id="/User/Add/"><span class="btn btn-small btn-primary active">Agregar Usuario</span></a>

@if(!Model.Any())
{
    <div class="well well-large">
		<h4 class="blue">Tabla Vacía</h4>
		No hay ninguna cuenta de usuario a mostrar.
	</div>
}
else
{
    using (Html.BeginForm("Index", "User", FormMethod.Get, new { id = "Form", @class = "form-horizontal", @Style = "margin:0;" }))
    {
        <p>
            Buscar por Nombre: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
            <input type="submit" value="Buscar" />
        </p>
    }
    <table class="table table-striped table-bordered table-hover" id="sample-table-1">
        <thead>
            <tr>
												
                @*<th>@Html.DisplayNameFor(model => model.First().DisplayName)</th>*@
                <th>@Html.ActionLink("Nombre", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })</th>
		        
                @*<th>@Html.DisplayNameFor(model => model.Email)</th>*@
                <th>@Html.ActionLink("Email", "Index", new { sortOrder = ViewBag.EmailSortParm, currentFilter = ViewBag.CurrentFilter })</th>
		        
                <th>@Html.DisplayNameFor(model => model.First().Role)</th>
                <th>@Html.DisplayNameFor(model => model.First().Status)</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
        
            @foreach (var item in Model) {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.DisplayName)</td>
                    <td>@Html.DisplayFor(modelItem => item.Email)</td>
                    <td>@Html.DisplayFor(modelItem => item.Role.Name)</td>
                    <td>@Html.DisplayFor(modelItem => item.Status)</td>
                    <td>
                        <a class="toEdit" data-toggle="modal" role="button" data-target="#EditModal" id="/User/Edit/@Html.DisplayFor(modelItem => item.Id)"><i class="icon-edit bigger-120"></i></a>
                        @*<a class="toDelete" role="button" id="@Html.DisplayFor(modelItem => item.Id)_Val"><i class="icon-trash bigger-120"></i></a>*@
                        @using (Html.BeginForm("Delete", "User", new { id = Html.DisplayFor(modelItem => item.Id) }, FormMethod.Post,
                            new { id = "Form_" + Html.DisplayFor(modelItem => item.Id) + "_Val", style = "display: none" })) { }
                        <input type="hidden" id="@Html.DisplayFor(modelItem => item.Id)_Val_Message"
                               value="¿Realmente desea eliminar al usuario @Html.DisplayFor(modelItem => item.DisplayName) - @Html.DisplayFor(modelItem => item.Email)?" />
                    </td>
                </tr>
            }
        </tbody>
    </table>
    
    <br />
    <p>
        Pagina @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount
    </p>       

    @Html.PagedListPager(Model, page => Url.Action("Index",
        new {page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter}));
    
}

<!-- Modal -->
<div tabindex="-1" class="modal hide fade" id="EditModal" style="display: none;" aria-hidden="true">
    <div id="body" class="modal-body">
        
    </div>
</div>
