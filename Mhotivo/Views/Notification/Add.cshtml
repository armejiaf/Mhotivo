@model Mhotivo.Models.NotificationModel

@{
    ViewBag.Title = "Notificaciones";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/jquery.hotkeys.min.js"></script>
<script src="~/Scripts/bootstrap-tagsinput.min.js"></script>
<link href="~/Content/bootstrap-tagsinput.css" rel="stylesheet" />
<script src="~/Scripts/typeahead.js"></script>

<link href="~/Content/summernote.css" rel="stylesheet" />
<link href="~/Content/summernote-bs3.css" rel="stylesheet" />
<script src="~/Scripts/summernote.min.js"></script>


@using (Html.BeginForm("Add", "Notification", FormMethod.Post, new {id = "Form", @class = "form-horizontal"}))
{
    @Html.ValidationSummary(true)

    <p class="text-error">
        @Html.ValidationMessageFor(model => model.NotificationName)
        @Html.ValidationMessageFor(model => model.Message) 
        @Html.ValidationMessageFor(model => model.NotificationTypeId) 
        @Html.ValidationMessageFor(model => model.StudentId) 
    </p>

    <div class="control-group">
        <div class="control-label">
            @Html.LabelFor(model => model.NotificationName)
        </div>
        <div class="controls">
            @Html.EditorFor(model => model.NotificationName)
        </div>
    </div>

    <div class="control-group">
        <div class="control-label">
            @Html.LabelFor(model => model.NotificationTypeSelectList)
        </div>
        <div class="controls">
            @Html.DropDownListFor(model => model.NotificationTypeId, Model.NotificationTypeSelectList, "Por favor Seleccione", new {id = "NotificationType"})
            @*@Html.DropDownList("NotificationType", Model.NotificationTypeSelectList, "Seleccione", new { id = "NotificationType" })*@
        </div>
    </div>


    <div class="control-group">
        <div class="control-label">
            @Html.Label("Dirigido a:")
        </div>
        <div class="controls">
            @Html.DropDownListFor(model => model.IdIsGradeAreaGeneralSelected, Model.NotificationTypeOpionSelectList, "Por favor Seleccione", new {id = "AddressedTo"})
            @*<select id="AddressedTo" name="AddressedTo"></select>*@
        </div>
    </div>
    
    <div class="control-group" id="OcultarList">
        <div class="control-label">
            @Html.Label("Dirigido a:")
        </div>
        <div class="controls">
            @Html.DropDownListFor(model => model.StudentId, Model.StudentOptionSelectList, "Seleccione Estudent", new {id = "StudentTo"})
            @*<select id="AddressedTo" name="AddressedTo"></select>*@
        </div>
    </div>


        @*<p>
        <input type="submit" value="Create" id="SubmitId" />
    </p>*@

    <div class="control-group">
        <div class="control-label">
            @Html.LabelFor(model => model.SendingEmail)
        </div>
        <div class="controls">
            @Html.CheckBoxFor(model => model.SendingEmail)
        </div>
    </div>

    <div id="htmlMessage"></div>

    @Html.HiddenFor(model => model.Message)

    <div class="space"></div>


    @*<div class="control-group">
        <div class="control-label">
            @Html.LabelFor(model => model.Message)
        </div>
        <div class="controls">
            @Html.TextAreaFor(model => model.Message)
        </div>
    </div>*@

    <div class="space"></div>

    <div class="modal-footer">
        @Html.ActionLink("Cancelar", "Index", "Notification", null, new {@class = "btn btn-small icon-remove"}) 
        @* <button data-dismiss="modal" class="btn btn-small" onclick="">
                <i class="icon-remove"></i>
                Cancelar
            </button>*@

        <button type="submit" class="btn btn-small btn-primary">
            <i class="icon-ok"></i>
            Crear
        </button>
    </div>

}

<script type="text/javascript">
    $('#From').attr("disabled", true);
    $(document).ready(function () {

        $('#OcultarList').css("display","none");

        $('#To').tagsinput({
            type: "POST",
            typeahead: {
                source: function (query) {
                    return $.getJSON('/NotificationModel/GetGroupsAndEmails/', { filter: query });
                }
            }
        });

        $('#WithCopyTo').tagsinput({
            type: "POST",
            typeahead: {
                source: function (query) {
                    return $.getJSON('/NotificationModel/GetGroupsAndEmails/', { filter: query });
                }
            }
        });

        $('#WithHiddenCopyTo').tagsinput({
            type: "POST",
            typeahead: {
                source: function (query) {


                    return $.getJSON('/NotificationModel/GetGroupsAndEmails/', { filter: query });
                }
            }
        });

        $('#htmlMessage').summernote();
    });

    $("input[name='useMyAccount']").click(function () {
        if ($(this).is(':checked')) {
            $('#From').attr('value', '');
            $('#From').attr("disabled", true);
        }
        else if ($(this).not(':checked')) {
            var ok = confirm('Esta seguro que desea usar otra cuenta para enviar este correo?');
            if (ok) {
                $('#From').attr("disabled", false);
            }
        }
    });

    $("#Form").submit(function (event) {
        var sHTML = $('#htmlMessage').code();
        $('#Message').val(sHTML);
        // alert("Handler for .submit() called. : <br/>" + $('#Message').val());
        //event.preventDefault();
    });

    $('#NotificationType').change(function () {

        if (this.value == 4) {
            $('#OcultarList').css("display", "block");
        } else {
            $('#OcultarList').css("display", "none");
        }

        $.getJSON('/Notification/OptiontList/' + $('#NotificationType').val(), function (data) {
            var items = '<option>Seleccione</option>';
            $.each(data, function (i, optionavailable) {
                items += "<option value='" + optionavailable.Value + "'>" + optionavailable.Text + "</option>";
            });
            $('#AddressedTo').html(items);
        });
    });

    $('#AddressedTo').change(function () {
        if ($('#NotificationType').val() == 4) {
            $.getJSON('/Notification/ListStudent/' + $('#AddressedTo').val(), function (data) {
                var items = '<option>Seleccione</option>';
                $.each(data, function (i, optionavailable) {
                    items += "<option value='" + optionavailable.Value + "'>" + optionavailable.Text + "</option>";
                });
                $('#StudentTo').html(items);
            });
        }
    });

</script>


@*@Scripts.Render("~/bundles/jquery")
<script type="text/jscript">
    $(function () {
        $('#NotificationType').change(function () {
            $.getJSON('/Notification/OptiontList/' + $('#NotificationType').val(), function (data) {
                var items = '<option>Seleccione</option>';
                $.each(data, function (i, optionavailable) {
                    items += "<option value='" + optionavailable.Value + "'>" + optionavailable.Text + "</option>";
                });
                $('#AddressedTo').html(items);
            });
        });
    });
</script>*@



